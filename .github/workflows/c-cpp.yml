name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: update ubuntu
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl-dev libgl1-mesa-dev libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev pkg-config libxcb-util-dev libxcb-util0-dev libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxfixes-dev libxi-dev libxinerama-dev libxkbfile-dev libxmuu-dev libxrandr-dev libxrender-dev libxres-dev libxss-dev libxtst-dev libxv-dev libxxf86vm-dev libxcb-glx0-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev uuid-dev libxcb-cursor-dev libxcb-dri2-0-dev libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev libxcb-res0-dev
        
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Specify the version of Python you need

      - name: Install Python Packages
        run: |
          pip install wheel setuptools
          pip install conan # Install the latest version of Conan

      - name: Setup CMake and Ninja
        uses: lukka/get-cmake@v3.30.3
        with:
          cmakeVersion: 'latest'
          ninjaVersion: 'latest'

      - name: Configure Conan Profile
        run: |
          conan profile detect
          touch custompr.txt
          echo "[settings]" >> custompr.txt
          echo "arch=x86_64" >> custompr.txt
          echo "build_type=Release" >> custompr.txt
          echo "compiler=gcc" >> custompr.txt
          echo "compiler.cppstd=gnu17" >> custompr.txt
          echo "compiler.libcxx=libstdc++11" >> custompr.txt
          echo "compiler.version=11" >> custompr.txt
          echo "os=Linux" >> custompr.txt
          echo "[conf]" >> custompr.txt
          echo "tools.cmake.cmaketoolchain:generator=Ninja" >> custompr.txt
          echo "tools.system.package_manager:mode=install" >> custompr.txt
          mkdir -p ~/.conan2/profiles/
          mv custompr.txt ~/.conan2/profiles/custompr

      - name: Install Conan Dependencies
        run: |
          conan install . --build=missing -s build_type=Release  --profile:build=custompr

      - name: Configure CMake
        run: cmake --preset conan-release

      - name: Build Project
        run: cmake --build build/Release

      - name: Run Tests
        run: |
          ctest --verbose
        working-directory: ./build/Release/

      - name: Run the Executable
        run: ./build/Release/bin/TetrisGame
